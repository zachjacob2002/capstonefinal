
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.12.1
 * Query Engine version: 473ed3124229e22d881cb7addf559799debae1ab
 */
Prisma.prismaVersion = {
  client: "5.12.1",
  engine: "473ed3124229e22d881cb7addf559799debae1ab"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  username: 'username',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  sex: 'sex',
  barangay: 'barangay',
  isArchived: 'isArchived'
};

exports.Prisma.BeneficiaryScalarFieldEnum = {
  beneficiaryId: 'beneficiaryId',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  suffix: 'suffix',
  birthdate: 'birthdate',
  age: 'age',
  sex: 'sex',
  job: 'job',
  barangay: 'barangay',
  healthStation: 'healthStation',
  primaryType: 'primaryType',
  civilStatus: 'civilStatus',
  contactNumber: 'contactNumber',
  isArchived: 'isArchived'
};

exports.Prisma.TypeScalarFieldEnum = {
  typeId: 'typeId',
  typeName: 'typeName',
  typeCategory: 'typeCategory',
  parentTypeId: 'parentTypeId',
  sex: 'sex',
  isArchived: 'isArchived'
};

exports.Prisma.PrimaryTypeScalarFieldEnum = {
  primaryTypeId: 'primaryTypeId',
  typeName: 'typeName'
};

exports.Prisma.TypePrimaryTypesScalarFieldEnum = {
  typeId: 'typeId',
  primaryTypeId: 'primaryTypeId'
};

exports.Prisma.BeneficiaryTypesScalarFieldEnum = {
  beneficiaryId: 'beneficiaryId',
  typeId: 'typeId'
};

exports.Prisma.ActivityScalarFieldEnum = {
  activityId: 'activityId',
  title: 'title',
  description: 'description',
  activityDate: 'activityDate',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  isArchived: 'isArchived',
  filename: 'filename',
  filepath: 'filepath'
};

exports.Prisma.ActivityDocumentationScalarFieldEnum = {
  documentationId: 'documentationId',
  activityId: 'activityId',
  filename: 'filename',
  filepath: 'filepath',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.ActivityParticipationScalarFieldEnum = {
  activityId: 'activityId',
  beneficiaryId: 'beneficiaryId',
  attended: 'attended',
  beneficiaryFirstName: 'beneficiaryFirstName',
  beneficiaryMiddleName: 'beneficiaryMiddleName',
  beneficiaryLastName: 'beneficiaryLastName',
  beneficiarySuffix: 'beneficiarySuffix',
  beneficiaryBirthdate: 'beneficiaryBirthdate',
  beneficiarySex: 'beneficiarySex',
  beneficiaryJob: 'beneficiaryJob',
  beneficiaryBarangay: 'beneficiaryBarangay',
  beneficiaryHealthStation: 'beneficiaryHealthStation',
  beneficiaryPrimaryType: 'beneficiaryPrimaryType',
  beneficiaryCivilStatus: 'beneficiaryCivilStatus',
  beneficiaryContactNumber: 'beneficiaryContactNumber',
  beneficiaryTypes: 'beneficiaryTypes',
  isArchived: 'isArchived'
};

exports.Prisma.ReportScalarFieldEnum = {
  reportId: 'reportId',
  type: 'type',
  month: 'month',
  year: 'year',
  userId: 'userId',
  dueDate: 'dueDate',
  isArchived: 'isArchived'
};

exports.Prisma.FileAttachmentScalarFieldEnum = {
  fileId: 'fileId',
  reportId: 'reportId',
  submissionId: 'submissionId',
  filePath: 'filePath',
  fileType: 'fileType',
  fileName: 'fileName'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  feedbackId: 'feedbackId',
  reportId: 'reportId',
  createdBy: 'createdBy',
  content: 'content',
  createdAt: 'createdAt',
  submissionId: 'submissionId'
};

exports.Prisma.SubmissionScalarFieldEnum = {
  submissionId: 'submissionId',
  reportId: 'reportId',
  userId: 'userId',
  status: 'status',
  submissionDate: 'submissionDate'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  createdAt: 'createdAt',
  read: 'read',
  type: 'type'
};

exports.Prisma.EventScalarFieldEnum = {
  eventId: 'eventId',
  title: 'title',
  start: 'start',
  end: 'end',
  allDay: 'allDay',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  isArchived: 'isArchived'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Beneficiary: 'Beneficiary',
  Type: 'Type',
  PrimaryType: 'PrimaryType',
  TypePrimaryTypes: 'TypePrimaryTypes',
  BeneficiaryTypes: 'BeneficiaryTypes',
  Activity: 'Activity',
  ActivityDocumentation: 'ActivityDocumentation',
  ActivityParticipation: 'ActivityParticipation',
  Report: 'Report',
  FileAttachment: 'FileAttachment',
  Feedback: 'Feedback',
  Submission: 'Submission',
  Notification: 'Notification',
  Event: 'Event'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
